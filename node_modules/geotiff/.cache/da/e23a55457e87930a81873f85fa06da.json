{"id":"JAiC","dependencies":[{"name":"/home/travis/build/geotiffjs/geotiff.js/.babelrc","includedInParent":true,"mtime":1586203732481},{"name":"/home/travis/build/geotiffjs/geotiff.js/package.json","includedInParent":true,"mtime":1586203732493},{"name":"./basedecoder","loc":{"line":2,"column":24},"parent":"/home/travis/build/geotiffjs/geotiff.js/src/compression/deflate.js","resolved":"/home/travis/build/geotiffjs/geotiff.js/src/compression/basedecoder.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"pako/lib/inflate\"),r=t(require(\"./basedecoder\"));function t(e){return e&&e.__esModule?e:{default:e}}class u extends r.default{decodeBlock(r){return(0,e.inflate)(new Uint8Array(r)).buffer}}exports.default=u;"},"sourceMaps":{"js":{"mappings":[{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":0}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":13}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":20}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":35}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":43}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":56}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":57}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":64}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":68}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":76}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":89}},{"source":"compression/deflate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"compression/deflate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"compression/deflate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"compression/deflate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"compression/deflate.js","original":{"line":2,"column":0},"generated":{"line":1,"column":125}},{"source":"compression/deflate.js","original":{"line":2,"column":0},"generated":{"line":1,"column":127}},{"source":"compression/deflate.js","original":{"line":2,"column":0},"generated":{"line":1,"column":129}},{"source":"compression/deflate.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":155}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":164}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":166}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":169}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":176}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":179}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":181}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":192}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":194}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":195}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":203}},{"source":"compression/deflate.js","original":{"line":4,"column":15},"generated":{"line":1,"column":206}},{"source":"compression/deflate.js","name":"DeflateDecoder","original":{"line":4,"column":21},"generated":{"line":1,"column":212}},{"source":"compression/deflate.js","name":"BaseDecoder","original":{"line":4,"column":44},"generated":{"line":1,"column":222}},{"source":"compression/deflate.js","original":{"line":4,"column":15},"generated":{"line":1,"column":224}},{"source":"compression/deflate.js","name":"decodeBlock","original":{"line":5,"column":2},"generated":{"line":1,"column":232}},{"source":"compression/deflate.js","name":"buffer","original":{"line":5,"column":14},"generated":{"line":1,"column":244}},{"source":"compression/deflate.js","original":{"line":6,"column":11},"generated":{"line":1,"column":247}},{"source":"compression/deflate.js","original":{"line":6,"column":11},"generated":{"line":1,"column":254}},{"source":"compression/deflate.js","original":{"line":6,"column":19},"generated":{"line":1,"column":256}},{"source":"compression/deflate.js","original":{"line":6,"column":19},"generated":{"line":1,"column":258}},{"source":"compression/deflate.js","original":{"line":6,"column":19},"generated":{"line":1,"column":267}},{"source":"compression/deflate.js","name":"Uint8Array","original":{"line":6,"column":23},"generated":{"line":1,"column":271}},{"source":"compression/deflate.js","name":"buffer","original":{"line":6,"column":34},"generated":{"line":1,"column":282}},{"source":"compression/deflate.js","name":"buffer","original":{"line":6,"column":43},"generated":{"line":1,"column":286}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":294}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":302}},{"source":"compression/deflate.js","original":{"line":4,"column":56},"generated":{"line":1,"column":310}}],"sources":{"compression/deflate.js":"import { inflate } from 'pako/lib/inflate';\nimport BaseDecoder from './basedecoder';\n\nexport default class DeflateDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    return inflate(new Uint8Array(buffer)).buffer;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"14e177a0deb11c86ee6b632effcd871a","cacheData":{"env":{}}}