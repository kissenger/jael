{"id":"vpgy","dependencies":[{"name":"/home/travis/build/geotiffjs/geotiff.js/package.json","includedInParent":true,"mtime":1586203732493},{"name":"/home/travis/build/geotiffjs/geotiff.js/node_modules/threads/package.json","includedInParent":true,"mtime":1586165210060}],"generated":{"js":"\"use strict\";function e(e){return Promise.all(e.map(e=>{const t=e=>({status:\"fulfilled\",value:e}),r=e=>({status:\"rejected\",reason:e}),s=Promise.resolve(e);try{return s.then(t,r)}catch(l){return Promise.reject(l)}}))}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.allSettled=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":2,"column":7},"generated":{"line":1,"column":13}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"allSettled","original":{"line":2,"column":16},"generated":{"line":1,"column":22}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"values","original":{"line":2,"column":27},"generated":{"line":1,"column":24}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"Promise","original":{"line":3,"column":11},"generated":{"line":1,"column":27}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"Promise","original":{"line":3,"column":11},"generated":{"line":1,"column":34}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"all","original":{"line":3,"column":19},"generated":{"line":1,"column":42}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"values","original":{"line":3,"column":23},"generated":{"line":1,"column":46}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"map","original":{"line":3,"column":30},"generated":{"line":1,"column":48}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"item","original":{"line":3,"column":34},"generated":{"line":1,"column":52}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"onFulfill","original":{"line":4,"column":14},"generated":{"line":1,"column":56}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"onFulfill","original":{"line":4,"column":14},"generated":{"line":1,"column":62}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"value","original":{"line":4,"column":27},"generated":{"line":1,"column":64}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":5,"column":19},"generated":{"line":1,"column":68}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"status","original":{"line":5,"column":21},"generated":{"line":1,"column":69}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":5,"column":29},"generated":{"line":1,"column":76}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"value","original":{"line":5,"column":42},"generated":{"line":1,"column":88}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"value","original":{"line":5,"column":42},"generated":{"line":1,"column":94}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"onReject","original":{"line":7,"column":14},"generated":{"line":1,"column":98}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"reason","original":{"line":7,"column":26},"generated":{"line":1,"column":100}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":8,"column":19},"generated":{"line":1,"column":104}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"status","original":{"line":8,"column":21},"generated":{"line":1,"column":105}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":8,"column":29},"generated":{"line":1,"column":112}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"reason","original":{"line":8,"column":41},"generated":{"line":1,"column":123}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"reason","original":{"line":8,"column":41},"generated":{"line":1,"column":130}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"itemPromise","original":{"line":10,"column":14},"generated":{"line":1,"column":134}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"Promise","original":{"line":10,"column":28},"generated":{"line":1,"column":136}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"resolve","original":{"line":10,"column":36},"generated":{"line":1,"column":144}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"item","original":{"line":10,"column":44},"generated":{"line":1,"column":152}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":11,"column":12},"generated":{"line":1,"column":155}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"itemPromise","original":{"line":12,"column":19},"generated":{"line":1,"column":159}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"itemPromise","original":{"line":12,"column":19},"generated":{"line":1,"column":166}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"then","original":{"line":12,"column":31},"generated":{"line":1,"column":168}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"onFulfill","original":{"line":12,"column":36},"generated":{"line":1,"column":173}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"onReject","original":{"line":12,"column":47},"generated":{"line":1,"column":175}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":14,"column":8},"generated":{"line":1,"column":178}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"error","original":{"line":14,"column":15},"generated":{"line":1,"column":184}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"Promise","original":{"line":15,"column":19},"generated":{"line":1,"column":187}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"Promise","original":{"line":15,"column":19},"generated":{"line":1,"column":194}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"reject","original":{"line":15,"column":27},"generated":{"line":1,"column":202}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","name":"error","original":{"line":15,"column":34},"generated":{"line":1,"column":209}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":216}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":223}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":238}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":246}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":259}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":260}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":267}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":271}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":279}},{"source":"../node_modules/threads/dist-esm/ponyfills.js","original":{"line":18,"column":1},"generated":{"line":1,"column":290}}],"sources":{"../node_modules/threads/dist-esm/ponyfills.js":"// Based on <https://github.com/es-shims/Promise.allSettled/blob/master/implementation.js>\nexport function allSettled(values) {\n    return Promise.all(values.map(item => {\n        const onFulfill = (value) => {\n            return { status: 'fulfilled', value };\n        };\n        const onReject = (reason) => {\n            return { status: 'rejected', reason };\n        };\n        const itemPromise = Promise.resolve(item);\n        try {\n            return itemPromise.then(onFulfill, onReject);\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }));\n}\n"},"lineCount":null}},"error":null,"hash":"d9a590444f60c70d4eabf6b2f1ebfabc","cacheData":{"env":{}}}